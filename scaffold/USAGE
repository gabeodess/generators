Description:
    This scaffold generator was pulled from Ryan Bate's nifty_scaffold repository 
    on github and hacked apart by Gabe Odess to bring you new and cool features 
    such as the ability to include association and paperclip declarations from the 
    command line.

    Scaffolds an entire resource, from model and migration to controller and
    views. The resource is ready to use as a starting point for your restful,
    resource-oriented application. Tests or specs are also generated depending
    on if you have a "spec" directory or not.

Dependencies:
    The generator makes use of a number of helpers in the views which can be acquired
    from my template repo: 
    http://github.com/gabeodess/templates/blob/master/helpers/nav_helper.rb
    http://github.com/gabeodess/templates/blob/master/helpers/paperclip_helper.rb
    
    You can feel free to use mine or write your own or take the references out of
    the views.

Usage:
    Pass the name of the model, either CamelCased or under_scored, as the first
    argument along with an optional list of attribute pairs and controller actions.

    If no controller actions are specified, they will default to index, show,
    new, create, edit, update, and destroy.

    Attribute pairs are column_name:sql_type arguments specifying the
    model's attributes. Timestamps are added by default, so you don't have to
    specify them by hand as 'created_at:datetime updated_at:datetime'.

    For example, `scaffolding post name:string content:text hidden:boolean`
    gives you a model with those three attributes, a controller that handles
    the create/show/update/destroy, forms to create and edit your posts, and
    an index that lists them all, as well as a map.resources :posts
    declaration in config/routes.rb.
    
    Adding an "!" in the mix of arguments will invert the passed controller
    actions. This will include all 7 controller actions except the ones
    mentioned. This option doesn't affect model attributes.

Examples:
    script/generate scaffolding post
        
        Will create a controller called "posts" it will contain all seven
        CRUD actions along with the views. A model will be created with no
        attributes.
        
    script/generate scaffolding post has_many:comments hm:viewers

        Will create a Post model with the comments and viewers has_many 
        declarations.

    script/generate scaffolding post belongs_to:blog bt:user

        Will create a Post model with the blog and user belongs_to declarations 
        and a migration file with the blog_id and user_id attributes.

    script/generate scaffolding post photo:paperclip

        Will create a Post model with the photo has_attached_file declaration
        and a file field in your view.  This does not yet generate the paperclip
        migration, but that is in the works.  This option also drops two methods
        (link_to_paperclip and link_to_destroy_paperclip) into your view.  You
        can use my version of these at 
        http://github.com/gabeodess/templates/blob/master/helpers/paperclip_helper.rb
        or write your own.  This will also include the :html => {:multipart => true}
        declaration in your view.
        
    script/generate scaffolding post name:string content:text index new edit
        
        Will create a Post model and migration file with the name and content
        attributes. It will also create a controller with index, new, create,
        edit, and update actions. Notice the create and update actions are
        added automatically with new and edit.
    
    script/generate scaffolding post ! show new
        
        Creates a posts controller (no model) with index, edit, update, and
        destroy actions.
